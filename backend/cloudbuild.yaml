substitutions:
  _LLM_MODEL_ID: 'gemma-3-4b-it'
  
steps:
  # Build the Docker image using Cloud Native Buildpacks
  - name: 'gcr.io/k8s-skaffold/pack'
    args:
      - 'build'
      - 'europe-west6-docker.pkg.dev/$PROJECT_ID/docker-repo/llm-backend:latest'
      - '--builder=gcr.io/buildpacks/builder'
      - '--path=backend'
    id: 'build'

  # Push the image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'europe-west6-docker.pkg.dev/$PROJECT_ID/docker-repo/llm-backend:latest'
    id: 'push'

  # Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'llm-backend'
      - '--image=europe-west6-docker.pkg.dev/$PROJECT_ID/docker-repo/llm-backend:latest'
      - '--platform=managed'
      - '--region=europe-west6'
      - '--allow-unauthenticated'
      - '--port=8080'
      - '--set-env-vars=LLM_MODEL_ID=${_LLM_MODEL_ID}'
      - '--set-secrets=API_KEY=API_KEY:latest,LLM_URL=LLM_URL:latest'
      - '--memory=1Gi'
      - '--cpu=1'
      - '--min-instances=0'
      - '--max-instances=1'
    id: 'deploy'

  # Grant permission to invoke the LLM service
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'services'
      - 'add-iam-policy-binding'
      - 'llm-server'
      - '--region=europe-west1'
      - '--member=serviceAccount:$PROJECT_NUMBER-compute@developer.gserviceaccount.com'
      - '--role=roles/run.invoker'
    id: 'grant-permissions'
    
logsBucket: 'gs://llm-backend-cloud-build-logs'